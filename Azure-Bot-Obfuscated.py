# Auto-generated obfuscated bot file
import os
import base64
from cryptography.fernet import Fernet

def multilayer_decrypt(data: bytes, keys: list[str]) -> bytes:
    for key in keys:
        f = Fernet(key.encode())
        data = f.decrypt(data)
    return data

b64_payload = """"""
encrypted = base64.b64decode(b64_payload)

keys = [os.getenv("KEY1"), os.getenv("KEY2"), os.getenv("KEY3")]

if None in keys:
    raise EnvironmentError("One or more decryption keys are missing from environment variables.")

decrypted_code = multilayer_decrypt(encrypted, keys)
exec(decrypted_code.decode(), globals())
